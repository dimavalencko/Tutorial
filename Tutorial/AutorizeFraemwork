Как работает эта авторизация:

1 - Изначально делаются проверки на пустоту текстовых полей "Логин" и "Пароль". Если данные введены, то идём дальше.

2.1 - Создаётся переменная user, в которую будет помещён найденый пользователь по логину и паролю. 
2.2 - Если пользователь найден 'if(user != null)', тогда кидаем его в определенное окно (в зависимости от ролей - ниже расписано, как делать авторизацию по ролям ). 
2.3 - Иначе кидаем ошибку - 'MessageBox.Show("Проверьте правильность ввдёнынх данных!", "Внимание!", MessageBoxButton.OK, MessageBoxImage.Error);'

3.1 - Если пользователь найден (2.2), внутри блока можно перейти на окно или сделать разделение ролей.
В примере у пользователя есть так же колонка Роль в БД исходя из значения которой он переносит тебя на нужную форму. Если роли имеются то мы делаем так:
if(user.Роль = "admin")
{
    AdminMenu frm = new AdminMenu();
    frm.Show();
}
else if(user.Роль = "customer")
{
    CustomerMenu frm = new CustomerMenu();
    frm.Show();
}

Полный код авторизации для примера:

if (TBLogin.Text.Length > 0) // 1
{
    if (TBPassword.Text.Length > 0) // 1
    {
        try
        {
            var user = FactoryEntities.GetContext().Пользователь.First(p => p.Логин == TBLogin.Text && p.Пароль == TBPassword.Text); // 2.1
            
            if (user != null) // 2.2
            {
                //Дальше идёт авторизация в зависимости от роли
                if(user.Роль = "admin")
                {
                    AdminMenu frm = new AdminMenu();
                    frm.Show();
                }
                else if(user.Роль = "customer")
                {
                    CustomerMenu frm = new CustomerMenu();
                    frm.Show();
                }
                else // Если такой роли нет в базе данных
                {
                    MessageBox.Show("Пользователь имеет низкий уровень доступа! Отказано в авторизации!", "Внимание!", MessageBoxButton.OK, MessageBoxImage.Warning);
                }

            }
            else // Если пользователь не найден в БД по введённым данным
            {
                MessageBox.Show("Пользователь с такими данными не был найден! Проверьте правильность ввдёнынх данных!", "Внимание!", MessageBoxButton.OK, MessageBoxImage.Error); // 2.3
                TBPassword.Clear(); // Очистка поля ввода пароля
            }
        }
        catch (Exception ex)
        {
            MessageBox.Show(ex.Message.ToString());
        }
    }
    else // Если не введён пароль
    {
        MessageBox.Show("Введите Пароль!", "Внимание!", MessageBoxButton.OK, MessageBoxImage.Warning);
        TBPassword.Background = Brushes.Red;
    }
}
else // Если не введён логин
{
    MessageBox.Show("Введите Логин!", "Внимание!", MessageBoxButton.OK, MessageBoxImage.Warning);
    TBLogin.Background = Brushes.Red;
}
